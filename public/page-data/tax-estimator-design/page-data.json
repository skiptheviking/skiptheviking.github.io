{"componentChunkName":"component---src-templates-blog-post-js","path":"/tax-estimator-design/","result":{"data":{"site":{"siteMetadata":{"title":"Skip the Viking"}},"markdownRemark":{"id":"89321fc1-aa94-5f76-b11c-9bf580e79d3e","excerpt":"Conceptual Design Originally, I wanted to create a REST service that would receive the input of someone’s tax data and return the output of it’s calculation…","html":"<h2>Conceptual Design</h2>\n<p>Originally, I wanted to create a REST service that would receive the input of someone’s tax data and return the output of it’s calculation.  This design would allow\nme to reuse the tax estimator service among a web app, ios and android app, and any other services. </p>\n<p>After working on the app I decided to run the calculations client side.  Mainly, at this point in the development,\nI’m just going to have a web app.  And since this is not currently yet persisting data, I can build the app\nwithout a backend. </p>\n<h3>Technical Design</h3>\n<p>Taxes are a funny thing.  You have gross income, modified adjusted gross income, adjusted gross income, and taxable income.  It gets really tricky\nwhen you are married calculating separate FICA’s, passive losses, and student interest.   And don’t get me started on rental income…</p>\n<p>Anyhow, initially I was build an entity named TaxDataInput that I could pass to a control\nobject called TaxCalculator to calculate theproper numbers.  But I found this design taking\nfar too long.  Java double primitative’s were hard to test (for currency assmptions they are awful),\nso of course I switch to the BigDecimal.  Even then I found myself converting doubles into BigDecimal and back into\ndoubles to do calculation.  The syntax was verbose.</p>\n<p>So instead wrote a quick model in javascript, and chained computed values together.  While this\nis technically causing redundant computations, it runs instantly in the browser. So for the development speed I moved my\nmodel to the front end and now I am able to develop much faster.</p>","frontmatter":{"title":"Design a tax estimating app","date":"January 03, 2019","description":"Build a ReactJS webapp that exposes your REAL marginal rate..."}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/tax-estimator-design/","previous":{"fields":{"slug":"/why-I-dont-let-my-doctor-wife-work/"},"frontmatter":{"title":"Why I don't let my doctor wife work"}},"next":{"fields":{"slug":"/books/"},"frontmatter":{"title":"My Library"}}}}}